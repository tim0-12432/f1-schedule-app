name: Android build on main

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test source code
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - name: Load Gradle from cache
        uses: actions/cache@v3
        with:
          path: |
            - ~/.gradle/caches
            - ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*gradle*') }}
          restore-keys: |
            - ${{ runner.os }}-gradle-
      - name: Run tests
        run: ./gradlew testDebugUnitTest --continue --stacktrace
      - name: Upload reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path:
            ./app/build/reports/tests/**
  lint:
    name: Lint source code
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - name: Load Gradle from cache
        uses: actions/cache@v3
        with:
          path: |
            - ~/.gradle/caches
            - ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*gradle*') }}
          restore-keys: |
            - ${{ runner.os }}-gradle-
      - name: Run linting
        run: ./gradlew lintDebug --stacktrace
      - name: Upload reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: lint-reports
          path:
            ./app/build/reports/lint*
  build:
    name: Build APK
    needs: [test, lint]
    runs-on: ubuntu-latest
    env:
      VERSION_CODE: ${{ github.run_id }}
      VERSION_SUFFIX: SNAPSHOT
    steps:
      - uses: actions/checkout@v3
      - name: Load Gradle from cache
        uses: actions/cache@v3
        with:
          path: |
            - ~/.gradle/caches
            - ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*gradle*') }}
          restore-keys: |
            - ${{ runner.os }}-gradle-
      - id: app-version
        run: echo "::set-output name=version::$(./gradlew -q printVersion)"
      - name: Build APK
        id: buildApk
        run: ./gradlew assembleRelease --stacktrace
      - name: Sign APK
        id: signApk
        uses: r0adkll/sign-android-release@v1
        with:
          release-directory: ./app/build/outputs/apk/release
          alias: ${{ secrets.ALIAS }}
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.PASSWORD }}
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-${{ steps.app-version.outputs.version }}
          path: |
            ./app/build/outputs/apk/release/**.apk
            ./app/release/**.apk